//
// WARNING: This is a generated file.
// Do not edit this file directly, or your changes will be overwritten.
//
// Use the 'gulp iconfont' Gulp task to regenerate this file from the SVG files in fonts/icons/glyphs
//
//     gulp iconfont
//

@font-face {
	font-family: "<%= fontName %>";
	src: url('<%= fontPath %><%= fontName %>.v<%= timeStamp %>.eot');
	src: url('<%= fontPath %><%= fontName %>.v<%= timeStamp %>.eot?#iefix') format('eot'),
		url('<%= fontPath %><%= fontName %>.v<%= timeStamp %>.woff') format('woff'),
		url('<%= fontPath %><%= fontName %>.v<%= timeStamp %>.ttf') format('truetype'),
		url('<%= fontPath %><%= fontName %>.v<%= timeStamp %>.svg#<%= fontName %>') format('svg');
	font-weight: normal;
	font-style: normal;
}

// Base icon mixin
//
// Sets up a pseudo selector of your choice with the basic styles needed for iconfont
// icons to render nicely. Custom properties can be passed into the mixin call like so:
//
//     .icon(@extraProps:{
//         awesome: 100%;
//         extra-sauce: 9001;
//     });
//
// You generally shouldn't need to call this directly; use the .icon--* mixins instead.
.icon(@selector:before, @extraProps:{}) {
	&:@{selector} {
		font-family: "<%= fontName %>";
		font-style: normal;
		font-weight: normal;
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
		display:inline-block;
		speak:none;
		text-decoration:inherit;
		text-transform:none;
		text-rendering:optimizeLegibility;
		-webkit-font-smoothing:antialiased;
		-moz-osx-font-smoothing:grayscale;
		@extraProps();
	}
}

<% _.each(glyphs, function(glyph) { %>
.icon-<%= glyph.name %>(@extraProps:{}, @selector:before) {
	.icon(@selector, {
		content: "\<%= glyph.codepoint.toString(16).toUpperCase() %>";
		@extraProps();
	});
}
<% }); %>

// All icons have a default class for use in templates where the icon is an element
.icon {
	vertical-align:middle;
	line-height:1;
	.icon();
}

<% _.each(glyphs, function(glyph) { %>
.icon--<%= glyph.name %> {
	.icon-<%= glyph.name %>();
}
<% }); %>

// Style guide

/*doc
---
title: icon
name: icon
category: basics
---
 ```html_example
<div class="l-col-12 l-content type--center bs-docs-icons">
<% _.each(glyphs, function(glyph) { %>
	<div class="bs-docs-icon">
		<i class="icon icon--<%= glyph.name %>"></i>
		<span>icon--<%= glyph.name %></span>
	</div>
<% }); %>
</div>
 ```
*/
